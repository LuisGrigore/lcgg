CC ?= gcc
CFLAGS ?= -Wall -Wextra -O2
REPLACEMENT = -I

TEST_DIR ?= test
SRC_DIR ?= src
EXTERNALS_DIR ?= externals

TEST_C_FILES = $(shell find $(TEST_DIR) -name "*.c")
TEST_H_DIRS = $(shell find $(TEST_DIR) -type d)

SRC_C_FILES = $(shell find $(SRC_DIR) -name "*.c")
SRC_H_DIRS = $(shell find $(SRC_DIR) -type d)


EXTERNAL_C_FILES = $(shell find $(EXTERNALS_DIR) -name "*.c")
EXTERNAL_H_DIRS = $(shell find $(EXTERNALS_DIR) -type d)

INCLUDE_SRC_H_DIRS = -I$(word 1, $(SRC_H_DIRS))$(foreach w,$(wordlist 2,$(words $(SRC_H_DIRS)), $(SRC_H_DIRS)), $(REPLACEMENT)$(w))
INCLUDE_EXTERNALS_H_DIRS = -I$(word 1, $(EXTERNAL_H_DIRS))$(foreach w,$(wordlist 2,$(words $(EXTERNAL_H_DIRS)), $(EXTERNAL_H_DIRS)), $(REPLACEMENT)$(w))
INCLUDE_TEST_H_DIRS = -I$(word 1, $(TEST_H_DIRS))$(foreach w,$(wordlist 2,$(words $(TEST_H_DIRS)), $(TEST_H_DIRS)), $(REPLACEMENT)$(w))

# Reemplaza la extensi√≥n .c por .o para generar los archivos objeto
TEST_OBJ_FILES := $(TEST_C_FILES:.c=.o)

# Regla para compilar cada archivo fuente por separado
test_obj_files: $(TEST_C_FILES)

	$(CC) $(CFLAGS) $(TEST_C_FILES) $(SRC_C_FILES) $(EXTERNAL_C_FILES) $ $(INCLUDE_SRC_H_DIRS) $(INCLUDE_EXTERNALS_H_DIRS) $(INCLUDE_TEST_H_DIRS) -o a.o


all: $(test_obj_files)


clean:
	rm -f $(SRC_DIR)/* $(SRC_DIR)/*/$(EXES)

.PHONY: all clean
