CC ?= gcc
CFLAGS ?= 
REPLACEMENT = -I

TEST_DIR ?= test
SRC_DIR ?= src
EXTERNALS_DIR ?= externals

TEST_C_FILES = $(shell find $(TEST_DIR) -name "*.c")
TEST_DIRS = $(shell find $(TEST_DIR) -type d)

SRC_C_FILES = $(shell find $(SRC_DIR) -name "*.c")
SRC_DIRS = $(shell find $(SRC_DIR) -type d)

EXTERNAL_C_FILES = $(shell find $(EXTERNALS_DIR) -name "*.c")
EXTERNAL_A_FILES = $(shell find $(EXTERNALS_DIR) -name "*.a" -exec basename {} \;)
EXTERNAL_DIRS = $(shell find $(EXTERNALS_DIR) -type d)

INCLUDE_SRC_DIRS = -I$(word 1, $(SRC_DIRS))$(foreach w,$(wordlist 2,$(words $(SRC_DIRS)), $(SRC_DIRS)), $(REPLACEMENT)$(w))
INCLUDE_EXTERNALS_DIRS = -I$(word 1, $(EXTERNAL_DIRS))$(foreach w,$(wordlist 2,$(words $(EXTERNAL_DIRS)), $(EXTERNAL_DIRS)), $(REPLACEMENT)$(w))
INCLUDE_TEST_DIRS = -I$(word 1, $(TEST_DIRS))$(foreach w,$(wordlist 2,$(words $(TEST_DIRS)), $(TEST_DIRS)), $(REPLACEMENT)$(w))

LIB_DIRS_EXTERNALS = -L$(word 1, $(EXTERNAL_DIRS))$(foreach w,$(wordlist 2,$(words $(EXTERNAL_DIRS)), $(EXTERNAL_DIRS)), -L$(w))

EXTERNAL_LIB_NAMES = $(subst .a,, $(subst lib,, $(EXTERNAL_A_FILES)))

ifneq ($(strip $(EXTERNAL_LIB_NAMES)),)
	LIB_EXTERNALS = -l$(word 1, $(EXTERNAL_LIB_NAMES))$(foreach w,$(wordlist 2,$(words $(EXTERNAL_LIB_NAMES)), $(EXTERNAL_LIB_NAMES)), -l$(w))
else
	LIB_EXTERNALS =
endif


# Regla para compilar cada archivo fuente por separado
test_obj_files: $(TEST_C_FILES)

	@echo \"$(EXTERNAL_LIB_NAMES)\"
	@for file in $(TEST_C_FILES); do \
		$(CC) $(CFLAGS) $$file $(SRC_C_FILES) $(EXTERNAL_C_FILES) $(LIB_DIRS_EXTERNALS) $(LIB_EXTERNALS) $(INCLUDE_SRC_DIRS) $(INCLUDE_EXTERNALS_DIRS) $(INCLUDE_TEST_DIRS) -o $${file%.c}.out; \
	done

# Regla principal
all: test_obj_files

# Regla para limpiar los archivos generados
clean:

	@find $(TEST_DIR) -type f -name "*.out" -exec rm -f {} +

.PHONY: all clean
