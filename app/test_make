# Configuración de directorios
SRC_DIR ?= src              # Directorio de origen con archivos .c
INC_DIR ?= includes         # Directorio que contiene archivos de encabezado .h
OBJ_DIR ?= obj              # Directorio de destino para archivos .o

# Buscar todos los archivos .c en el directorio de origen
SRCS = $(shell find $(SRC_DIR) -name "*.c")

# Generar la lista de archivos .o correspondientes
OBJS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRCS))

# Generar la lista de ejecutables correspondientes
EXECS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%,$(SRCS))

# Regla principal: compilar todos los ejecutables
all: $(EXECS)

# Regla para compilar archivos .c a archivos .o
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(dir $@)               # Crear el directorio de destino si no existe
	gcc -c $< -o $@ -I$(INC_DIR)       # Compilar el archivo .c en .o

# Regla para enlazar archivos .o a ejecutables
$(OBJ_DIR)/%: $(OBJ_DIR)/%.o
	gcc -o $@ $<                       # Enlazar el archivo .o para crear el ejecutable

# Generar dependencias automáticamente
-include $(OBJS:.o=.d)

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(dir $@)               # Crear el directorio de destino si no existe
	gcc -MMD -c $< -o $@ -I$(INC_DIR)  # Compilar el archivo .c en .o y generar un archivo .d

# Regla para limpiar los archivos .o y los ejecutables generados
clean:
	rm -rf $(OBJ_DIR)/*.o $(OBJ_DIR)/**/*.o $(OBJ_DIR)/* $(OBJ_DIR)/**/*.d

.PHONY: all clean
